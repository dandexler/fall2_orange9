library(forecast)
library(tsa)
library(haven)
library(fma)
library(expsmooth)
library(lmtest)
library(zoo)
library(seasonal)
library(imputeTS)
library(xts)
library(ggplot2)
library(dplyr)
library(lubridate)
library(tseries)
data <- read.csv("C:\\Users\\dande\\Desktop\\MAIN\\Documents\\NCState Advanced Analytics\\Fall 2019\\Fall 1\\Time Series I\\Data\\PM_2_5_Raleigh2.csv")
dates_list <- as.Date(data[,1], format = '%m/%d/%Y')
p_matter <- data[,5]
month_pm2 <-data.frame(dates_list, p_matter)
colnames(month_pm2)<- c("Date","Amount")
# Aggregate daily PM2.5 and calculate mean for each month
data <- month_pm2 %>%
mutate(Date = as.Date(Date, format = "%m/%d/%Y"))
monthly_pm2 <- data %>%
group_by(yr = year(Date),mon = month(Date)) %>%
summarise(Amount = mean(Amount))
pm2_v.ts <- ts(pm2_v$Amount)
monthly_pm2 <- data %>%
group_by(yr = year(Date),mon = month(Date)) %>%
summarise(Amount = mean(Amount))
pm2_t <- monthly_pm2[1:54,]
pm2_v <- monthly_pm2[55:60,]
pm2_t.ts <- ts(pm2_t$Amount)
pm2_v.ts <- ts(pm2_v$Amount)
pm2_t.ts <- ts(pm2_t$Amount, frequency = 12)
pm2_v.ts <- ts(pm2_v$Amount, frequency = 12)
# STL decomposition of training set
decomp_stl <- stl(pm2_t.ts, s.window = 7)
plot(decomp_stl)
?forecast
nsdiffs(pm2_t.ts,test='ch')
data <- read.csv("C:\\Users\\dande\\Desktop\\MAIN\\Documents\\NCState Advanced Analytics\\Fall 2019\\Fall 1\\Time Series I\\Data\\PM_2_5_Raleigh2.csv")
dates_list <- as.Date(data[,1], format = '%m/%d/%Y')
p_matter <- data[,5]
month_pm2 <-data.frame(dates_list, p_matter)
colnames(month_pm2)<- c("Date","Amount")
data <- month_pm2 %>%
mutate(Date = as.Date(Date, format = "%m/%d/%Y"))
monthly_pm2 <- data %>%
group_by(yr = year(Date),mon = month(Date)) %>%
summarise(Amount = mean(Amount))
monthly_pm2
pm2_t <- monthly_pm2[1:54,]
pm2_v <- monthly_pm2[55:60,]
pm2_t
pm2_t.ts <- ts(pm2_t$Amount, frequency = 12)
pm2_v.ts <- ts(pm2_v$Amount, frequency = 12)
decomp_stl <- stl(pm2_t.ts, s.window = 7)
plot(decomp_stl)
month=factor(pm2_t$month)
month
reg=model.matrix(~month[1:54])
month=factor(pm2_t$mon)
pm2_t$mon
month=factor(pm2_t$mon)
reg=model.matrix(~month[1:54])
reg=reg[,-1]
pm2_t.ts.seas=Arima(pm2_t.ts,xreg=reg)
summary(tx.seas)
summary(pm2_t.ts.seas)
reg=model.matrix(~month)
reg=reg[,-1]
pm2_t.ts.seas=Arima(pm2_t.ts,xreg=reg)
summary(pm2_t.ts.seas)
dummy.sarima=Arima(pm2_t.ts,xreg=reg)
summary(dummy.sarima)
White.LB <- rep(NA, 12)
for(i in 1:12){
White.LB[i] <- Box.test(dummy.sarima$residuals, lag = i, type = "Ljung", fitdf = 2)$p.value
}
White.LB <- pmin(White.LB, 0.2)
barplot(White.LB, main = "Ljung-Box Test P-values", ylab = "Probabilities", xlab = "Lags", ylim = c(0, 0.2))
abline(h = 0.01, lty = "dashed", col = "black")
abline(h = 0.05, lty = "dashed", col = "black")
dummy.sarima$residuals
White.LB <- rep(NA, 12)
for(i in 1:12){
White.LB[i] <- Box.test(dummy.sarima$residuals, lag = i, type = "Ljung", fitdf = 2)$p.value
}
White.LB <- pmin(White.LB, 0.2)
barplot(White.LB, main = "Ljung-Box Test P-values", ylab = "Probabilities", xlab = "Lags", ylim = c(0, 0.2))
abline(h = 0.01, lty = "dashed", col = "black")
abline(h = 0.05, lty = "dashed", col = "black")
White.LB <- rep(NA, 12)
for(i in 1:12){
White.LB[i] <- Box.test(dummy.sarima$residuals, lag = i, type = "Ljung", fitdf = 2)$p.value
}
dummy.sarima=Arima(pm2_t.ts,xreg=reg)
summary(dummy.sarima)
White.LB <- rep(NA, 12)
for(i in 1:12){
White.LB[i] <- Box.test(dummy.sarima$residuals, lag = i, type = "Ljung", fitdf = 2)$p.value
}
White.LB <- pmin(White.LB, 0.2)
abline(h = 0.05, lty = "dashed", col = "black")
ggtsdisplay(dummy.sarima)
plot(dummy.sarima$residuals)
tsdisplay(residuals(dummy.sarima))
dummy.ts <- ts(dummy.sarima$residuals, frequency = 12)
plot(dummy.ts)
tsdisplay(residuals(dummy.sarima))
dummy.ts <- ts(dummy.sarima$residuals, frequency = 12)
plot(dummy.ts)
acf(dummy.sarima$residuals)
acf(dummy.sarima$residuals, lag.max = 10)
acf(dummy.sarima, lag.max = 10)
plot(dummy.sarima$residuals)
plot(dummy.sarima$residuals)
acf(dummy.sarima$residuals)
acf(dummy.sarima$residuals)$acf
tsdisplay(dummy.sarima$residuals)
acf(dummy.sarima$residuals)
tsdisplay(dummy.sarima$residuals)
adf.test(dummy.sarima, alternative = "stationary", k=0)
adf.test(dummy.sarima$residuals, alternative = "stationary", k=0)
adf.test(dummy.sarima$residuals, alternative = "stationary", k=1)
adf.test(dummy.sarima$residuals, alternative = "stationary", k=2)
dummy.sarima.trend=Arima(dummy.sarima$residuals, xreg=reg,order=c(0,0,0))
plot(dummy.sarima.trend$residuals)
dummy.resid.ts <- ts(dummy.sarima$residuals, frequency = 12)
dummy.sarima.trend=Arima(dummy.resid.ts, xreg=reg,order=c(0,0,0))
plot(dummy.sarima.trend$residuals)
dummy.resid.ts <- ts(dummy.sarima$residuals)
dummy.sarima.trend=Arima(dummy.resid.ts, xreg=t,order=c(0,0,0))
dummy.sarima.trend=Arima(dummy.resid.ts, xreg=reg,order=c(0,0,0))
adf.test(dummy.sarima.trend$residuals, alternative = "stationary", k=0)
ndiffs(dummy.sarima$residuals)
Box.test(dummy.sarima$residuals, type = "Ljung-Box")
Box.test(dummy.sarima$residuals, lag=10, type = "Ljung-Box")
dummy.sarima.diff <- diff(dummy.sarima$residuals)
dummy.sarima.diff.ts <- ts(dummy.sarima.diff)
dummy.sarima.trend=Arima(dummy.sarima.diff.ts, xreg=reg,order=c(0,0,0))
tsdisplay(dummy.sarima.diff.ts)
Box.test(dummy.sarima.diff.ts, type = "Ljung-Box")
forecast(dummy.sarima.diff, h = 10)
forecast(dummy.sarima.diff.ts, h = 10)
plot(forecast(dummy.sarima.diff.ts, h = 10))
